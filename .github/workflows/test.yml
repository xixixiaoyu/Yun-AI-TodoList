name: 🧪 Tests & Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # 每天凌晨 2 点运行回归测试和安全审计
    - cron: '0 2 * * *'

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '9.0.0'

jobs:
  # 单元测试和集成测试
  test:
    name: 🔬 Unit & Integration Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup environment
        uses: ./.github/actions/setup-environment
        with:
          node-version: ${{ matrix.node-version }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: 🔍 Type check
        run: pnpm type-check

      - name: 🧹 Lint check
        run: pnpm lint:check

      - name: 💅 Format check
        run: pnpm format:check

      - name: 🧪 Run unit tests
        run: pnpm test:coverage
        continue-on-error: true

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: 📈 Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports-${{ matrix.node-version }}
          path: coverage/

  # 构建测试
  build:
    name: 🏗️ Build Test
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup environment
        uses: ./.github/actions/setup-environment
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: 🏗️ Build project
        uses: ./.github/actions/build-project

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: apps/frontend/dist/
          if-no-files-found: error
          retention-days: 1

  # 性能测试
  performance:
    name: ⚡ Performance Tests
    runs-on: ubuntu-latest
    needs: build
    if: success()

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup environment
        uses: ./.github/actions/setup-environment
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: ⚡ Run performance benchmarks
        run: pnpm perf:benchmark
        continue-on-error: true

      - name: 📊 Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: performance-results
          path: performance-results.json

  # 安全扫描（合并了原 audit-fix.yml 的功能）
  security:
    name: 🔒 Security Scan & Audit
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup environment
        uses: ./.github/actions/setup-environment
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: 🔍 Run security audit
        uses: ./.github/actions/security-audit

      - name: 🔒 Run CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: 🔒 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # 依赖检查
  dependency-check:
    name: 📦 Dependency Check
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup environment
        uses: ./.github/actions/setup-environment
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: 🔍 Check for outdated dependencies
        run: pnpm outdated || true

      - name: 📊 Generate dependency report
        run: |
          pnpm list --depth=0 --json > dependency-report.json
          echo "## 📦 Dependencies Report" >> $GITHUB_STEP_SUMMARY
          echo "Generated dependency report with $(jq '.dependencies | length' dependency-report.json) direct dependencies" >> $GITHUB_STEP_SUMMARY

      - name: 📦 Upload dependency report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-report
          path: dependency-report.json

  # 简化的测试报告汇总
  test-summary:
    name: 📋 Test Summary
    runs-on: ubuntu-latest
    needs: [test, build, performance, security, dependency-check]
    if: always()

    steps:
      - name: 📊 Generate test summary
        run: |
          echo "# 🧪 Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🎯 Test Matrix Results" >> $GITHUB_STEP_SUMMARY
          echo "- Unit Tests: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Build Test: ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Performance: ${{ needs.performance.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Security: ${{ needs.security.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Dependencies: ${{ needs.dependency-check.result }}" >> $GITHUB_STEP_SUMMARY

          # 简单的成功/失败判断
          if [[ "${{ needs.test.result }}" == "success" && "${{ needs.build.result }}" == "success" && "${{ needs.security.result }}" == "success" ]]; then
            echo "✅ All critical tests passed - Ready for deployment 🚀" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Some tests failed - Please check and fix issues" >> $GITHUB_STEP_SUMMARY
          fi
