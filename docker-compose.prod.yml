# 生产环境 Docker Compose 配置
# 包含安全优化和性能调优
version: '3.8'

services:
  # PostgreSQL 数据库 - 生产优化
  postgres:
    image: postgres:15-alpine
    container_name: yun-todolist-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-yun_ai_todolist}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
      # 性能优化
      POSTGRES_SHARED_PRELOAD_LIBRARIES: pg_stat_statements
      POSTGRES_MAX_CONNECTIONS: 100
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 1GB
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - todolist-prod-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-yun_ai_todolist}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql

  # Redis 缓存 - 生产优化
  redis:
    image: redis:7-alpine
    container_name: yun-todolist-redis-prod
    restart: unless-stopped
    command: >
      redis-server
      --appendonly yes
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_prod_data:/data
    networks:
      - todolist-prod-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  # 后端 API 服务 - 生产优化
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    container_name: yun-todolist-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-yun_ai_todolist}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-1h}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-12}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost}
      LOG_LEVEL: ${LOG_LEVEL:-warn}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - todolist-prod-network
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true

  # 前端应用 - 生产优化
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-/api/v1}
    container_name: yun-todolist-frontend-prod
    restart: unless-stopped
    ports:
      - "80:8080"
      - "443:8080"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - todolist-prod-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/cache/nginx
      - /var/run

networks:
  todolist-prod-network:
    driver: bridge
    name: yun-todolist-prod-network
    driver_opts:
      com.docker.network.bridge.name: br-todolist-prod

volumes:
  postgres_prod_data:
    name: yun-todolist-postgres-prod-data
    driver: local
  redis_prod_data:
    name: yun-todolist-redis-prod-data
    driver: local
  backend_uploads:
    name: yun-todolist-backend-uploads
    driver: local
  backend_logs:
    name: yun-todolist-backend-logs
    driver: local
